#!/bin/bash
set -ex

# Set language to English
export LC_ALL=C
export LANG=C
export LANGUAGE=C

# Create directory if it does not exist
mkdir -p results

to_output() {
    {
        echo "+" "$@"
        "$@"
        echo
    } >>"$OUTPUT_FILE"
}
date_epoch() { date "+%s"; }
date_readable() { date "+%Y-%m-%d %H:%M:%S"; }

OUTPUT_FILE="$PWD/results/$(date_epoch).txt"

########################################################################
# Hardware and system information
########################################################################

do_check_free_memory() {
    to_output free -h
}

do_hardware_info() {
    to_output echo "$(uname -a | sed "s/$(uname -n)/hostname/")"
    to_output lsb_release -a
    to_output nproc
    to_output sudo lshw -sanitize -notime
}

########################################################################
# Clean
########################################################################

do_clean() {
    ./clean
}

########################################################################
# Download
########################################################################

do_download() {
    START_DOWNLOAD=$(date_epoch)
    to_output echo "$(date_readable) Downloading..."

    ./download

    cd poky
    to_output git describe --always
    source oe-init-build-env

    END_DOWNLOAD=$(date_epoch)
    TIME_DOWNLOAD=$((END_DOWNLOAD - START_DOWNLOAD))
    to_output echo "$(date_readable) Download time: $TIME_DOWNLOAD s"
}

do_builds() {
    ########################################################################
    # Build image
    ########################################################################

    START_IMAGE=$(date_epoch)
    to_output echo "$(date_readable) Building image..."

    bitbake core-image-minimal

    END_IMAGE=$(date_epoch)
    TIME_IMAGE=$((END_IMAGE - START_IMAGE))
    to_output echo "$(date_readable) Image build time: $TIME_IMAGE s"

    ########################################################################
    # Build SDK
    ########################################################################

    START_SDK=$(date_epoch)
    to_output echo "$(date_readable) Building SDK..."

    bitbake core-image-minimal -c populate_sdk

    END_SDK=$(date_epoch)
    TIME_SDK=$((END_SDK - START_SDK))
    to_output echo "$(date_readable) SDK build time: $TIME_SDK s"

    ########################################################################
    # Total
    ########################################################################

    to_output du -sh downloads sstate-cache tmp

    TOTAL_BUILD_TIME=$((END_SDK - START_IMAGE))
    to_output echo "\
    Download time: $TIME_DOWNLOAD s
    Image build time: $TIME_IMAGE s
    SDK build time: $TIME_SDK s
    Total build time: $TOTAL_BUILD_TIME s"
}

do_hardware_info
do_check_free_memory
do_clean
do_download
do_builds

# Check free memory again (was swapping?)
do_check_free_memory
